---
title: "الإحصاء والذكاء الصناعي: من البكسلات إلى التنبؤات  "
author: د. باسم بن صالح الصاعدي
Last update: "your.email@example.com"
date: 15 Oct 2024 
format: 
  revealjs:
    slide-number: c/t
    chalkboard: true
    pdf-max-pages-per-slide: 2
    footer: "اليوم العالمي للإحصاء - قسم الاحصاء (جامعة تبوك)"
    background-image: background.jpg      
    transition: slide
---


:::: {.columns}


::: {.column width="50%" .fragment}

![](Screenshot 2024-10-15 205714.png){fig-align=center width="100%"}

:::

::: {.column width="50%" .fragment}


![](shutterstock_1088565344.png){fig-align=center width="100%"}




:::



::::


# تصنيف الأرقام المكتوبة بخط اليد


#


![](test10_10.png){fig-align=center width="100%"}



# 


![](Untitled-2024-10-15-2155.png){fig-align=center width="50%"}

#

![](Screenshot 2024-10-15 205714.png){fig-align=center width="100%"}

#

![](Screenshot 2024-10-15 220801.png){fig-align=center width="80%"}


#

![](Screenshot 2024-10-15 224246.png){fig-align=center width="80%"}


## MNIST Dataset




![](mnist-3.0.1.png){fig-align=center width="60%"}
```{r}
c(70000, 28, 28)
```

## 
![](test100.png){fig-align=center width="100%"}

##

```{r}
c(70000, 28, 28)
```


##

![](test1000.png){fig-align=center width="70%"}

##

![](Untitled-2024-10-16-2151.png){fig-align=center width="1%"}


##

:::: {.columns}


::: {.column width="50%" .fragment}


![](test11.png){fig-align=center width="100%"}

:::

::: {.column width="50%" .fragment}


![](test12.png){fig-align=center width="100%"}



:::



::::

## Logistic Regression

![](test12.png){fig-align=center width="100%"}

```{r}
784 #Features or variables
```



  $$
    P(y = k) = \frac{1}{1 + e^{-(\beta_0 + \beta_1 x_1 + \dots + \beta_{784} x_{784})}}
  $$

##

Table: Model Evaluation Results

|         |         x|
|:--------|---------:|
|loss     | 0.4800635|
|accuracy | 0.8816000|

## 

![](test13.png){fig-align=center width="100%"}

##

![](test14.png){fig-align=center width="100%"}


   
## Convolutional Neural Networks (CNN)

![](CNN.png){fig-align=center width="100%"}

##

![](test9_1.png){fig-align=center width="100%"}

##
![](test9_2.png){fig-align=center width="100%"}

## 

![](test9_3.png){fig-align=center width="100%"}

##

![](test9_4.png){fig-align=center width="100%"}

##




|Metric   |     Value|
|:--------|---------:|
|Loss     | 0.0352526|
|Accuracy | 0.9902000|

##

![](test9_6.png){fig-align=center width="100%"}

##

![](test9_5.png){fig-align=center width="100%"}


# التنبؤ بنوع الورم

![](c148bb1f-6faa-430e-b51a-1d923b78a8d6.jpg){fig-align=center width="100%"}



## Breast Cancer Wisconsin dataset

![](Screenshot 2024-10-17 142428.png){fig-align=center width="100%"}
![](test10_1.png){fig-align=center width="50%"}

##

![](test10_2.png){fig-align=center width="50%"}

##

![](test10_3.png){fig-align=center width="50%"}

## Logistic Regression


|Metric   |     Value|
|:--------|---------:|
|Accuracy | 0.9265   |

##


![](test10_4.png){fig-align=center width="100%"}




## Support Vector Machine (SVM)
![](SVM_margin.png){fig-align=center width="100%"}

##

|Metric   |     Value|
|:--------|---------:|
|Accuracy | 0.9657   |

##

![](test10_5.png){fig-align=center width="100%"}


##

```{r}
library(e1071)
library(plotly)
library(rgl)
# Load the dataset
library(mlbench)
data(BreastCancer)

# Clean the data: Replace "?" with NA and remove missing values
BreastCancer[BreastCancer == "?"] <- NA
BreastCancer <- na.omit(BreastCancer)

# Convert relevant columns to numeric (from column 2 to column 10)
BreastCancer[, 2:10] <- lapply(BreastCancer[, 2:10], as.numeric)

# Convert the target variable 'Class' to a factor (benign and malignant)
BreastCancer$Class <- factor(BreastCancer$Class, levels = c("benign", "malignant"))

# Select three features for 3D visualization (e.g., Cl.thickness, Cell.size, and Cell.shape)
BreastCancer_subset <- BreastCancer[, c("Cl.thickness", "Cell.size", "Cell.shape", "Class")]

# View the cleaned data
#head(BreastCancer_subset)



# Train an SVM model using the selected features
svm_model <- svm(Class ~ Cl.thickness + Cell.size + Cell.shape, 
                 data = BreastCancer_subset, kernel = "linear", scale = TRUE)

# Summary of the SVM model
#summary(svm_model)



# Create a grid for Cl.thickness and Cell.size
grid_size <- 50
x_range <- seq(min(BreastCancer_subset$Cl.thickness), max(BreastCancer_subset$Cl.thickness), length.out = grid_size)
y_range <- seq(min(BreastCancer_subset$Cell.size), max(BreastCancer_subset$Cell.size), length.out = grid_size)

# Create a grid of all combinations of Cl.thickness and Cell.size
grid_points <- expand.grid(Cl.thickness = x_range, Cell.size = y_range)

# Fix the Cell.shape feature to its mean value (you can choose other values if necessary)
grid_points$Cell.shape <- mean(BreastCancer_subset$Cell.shape)

# Predict the class for each grid point using the SVM model
grid_predictions <- predict(svm_model, newdata = grid_points)

# Reshape the predictions into a matrix for plotting
z_matrix <- matrix(as.numeric(grid_predictions), nrow = grid_size, ncol = grid_size)




# 3D plot using Plotly with more appealing colors
p <- plot_ly() %>%
  add_markers(data = BreastCancer_subset, 
              x = ~Cl.thickness, y = ~Cell.size, z = ~Cell.shape, 
              color = ~Class, colors = c("#66c2a5", "#fc8d62"),  # Light teal and orange
              marker = list(size = 5, opacity = 0.8)) %>%
  add_surface(x = x_range, y = y_range, z = z_matrix, 
              surfacecolor = matrix(rep(1, length(x_range) * length(y_range)), nrow = length(x_range)),
              colorscale = list(c(0, 1), c("lightblue", "lightpink")),  # Light blue and pink for the surface
              opacity = 0.5) %>%
  layout(scene = list(xaxis = list(title = 'Clump Thickness'),
                      yaxis = list(title = 'Cell Size'),
                      zaxis = list(title = 'Cell Shape'),
                      bgcolor = 'rgba(0,0,0,0)'),  # Transparent background
         title = "SVM Decision Boundary for Breast Cancer Dataset")

# Show the plot
p

```


##

![](diagram-model - Copy.png){fig-align=center width="100%"}

##

![](test13_1.png){fig-align=center width="100%"}
